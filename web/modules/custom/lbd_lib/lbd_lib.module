<?php

/**
 * @file
 * Provides core functionality used across all Labdoo custom modules.
 */

use Drupal\node\NodeInterface;
use Drupal\user\Entity\User;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function lbd_lib_node_presave(NodeInterface $entity) {

  if (($entity->bundle() == 'dootronic') && $entity->isNew()) {
    // Assign its title to be equal to the next available ID
    // without letting the user set it. (See also lbd_lib_form_node_form_alter
    // where we disable showing the title in edit form mode.)
    $did = lbd_next_dootronic_id();
    $entity->set('title', sprintf("%09d", $did));
  }

}

/**
 * Allocate a new dootronic ID.
 *
 * @return string
 *   The new ID
 */
function lbd_next_dootronic_id() {
  $database = \Drupal::database();
  // @todo Optimize this query
  $query = $database->query("SELECT title FROM node_field_data WHERE type='dootronic' ORDER BY title ASC");
  $result = $query->fetchAll();

  // The following algorithm searches for any possible
  // holes in the Labdoo ID space and if none, allocates the next
  // smallest ID.
  $potential_id = 1;
  foreach ($result as $item) {
    $current_id = intval($item->title);
    if ($potential_id < $current_id) {
      break;
    }
    $potential_id++;
  }
  return(strval($potential_id));
}

/**
 * Implements hook_form_node_form_alter().
 */
function lbd_lib_form_node_form_alter(&$form, &$form_state, $form_id) {

  /*
   * Node is a dootronic
   */
  if ($form_id == 'node_dootronic_form' || $form_id == 'node_dootronic_edit_form') {

    /*
     * Hide the title from the form
     * so that users can't write to it.
     * That's done because the title is
     * programmatically given the value of
     * the dootronic's Labdoo ID
     */
    unset($form['title']);
  }
}

/**
 * Implements hook_FORM_ALTER().
 */
function lbd_lib_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == "node_dootronic_form") {
    $current_user = \Drupal::currentUser();
    // Set default values to the current user if this is a node creation
    // (rather than node edit) event.
    if ($form['field_manager']['widget'][0]['target_id']['#default_value'] == '') {
      $form['field_manager']['widget'][0]['target_id']['#default_value'] = User::load($current_user->id());
    }
    if ($form['field_tagger']['widget'][0]['target_id']['#default_value'] == '') {
      $form['field_tagger']['widget'][0]['target_id']['#default_value'] = User::load($current_user->id());
    }
  }
}
